// Generated by CoffeeScript 1.8.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  app.views.Mobile = (function(_super) {
    __extends(Mobile, _super);

    Mobile.className = '_mobile';

    Mobile.elements = {
      body: 'body',
      content: '._container',
      sidebar: '._sidebar'
    };

    Mobile.routes = {
      after: 'afterRoute'
    };

    function Mobile() {
      this.afterRoute = __bind(this.afterRoute, this);
      this.onTapSearch = __bind(this.onTapSearch, this);
      this.onClickMenu = __bind(this.onClickMenu, this);
      this.onClickHome = __bind(this.onClickHome, this);
      this.onClick = __bind(this.onClick, this);
      this.hideSidebar = __bind(this.hideSidebar, this);
      this.showSidebar = __bind(this.showSidebar, this);
      this.el = document.documentElement;
      Mobile.__super__.constructor.apply(this, arguments);
    }

    Mobile.prototype.init = function() {
      FastClick.attach(this.body);
      app.shortcuts.stop();
      $.on(this.body, 'click', this.onClick);
      $.on($('._home-link'), 'click', this.onClickHome);
      $.on($('._menu-link'), 'click', this.onClickMenu);
      $.on($('._search'), 'touchend', this.onTapSearch);
      app.document.sidebar.search.on('searching', this.showSidebar).on('clear', this.hideSidebar);
      this.activate();
    };

    Mobile.prototype.showSidebar = function() {
      var selection;
      if (this.isSidebarShown()) {
        return;
      }
      this.contentTop = this.body.scrollTop;
      this.content.style.display = 'none';
      this.sidebar.style.display = 'block';
      if (selection = this.findByClass(app.views.ListSelect.activeClass)) {
        $.scrollTo(selection, this.body, 'center');
      } else {
        this.body.scrollTop = this.findByClass(app.views.ListFold.activeClass) && this.sidebarTop || 0;
      }
    };

    Mobile.prototype.hideSidebar = function() {
      if (!this.isSidebarShown()) {
        return;
      }
      this.sidebarTop = this.body.scrollTop;
      this.sidebar.style.display = 'none';
      this.content.style.display = 'block';
      this.body.scrollTop = this.contentTop || 0;
    };

    Mobile.prototype.isSidebarShown = function() {
      return this.sidebar.style.display !== 'none';
    };

    Mobile.prototype.onClick = function(event) {
      if (event.target.hasAttribute('data-pick-docs')) {
        this.showSidebar();
      }
    };

    Mobile.prototype.onClickHome = function() {
      app.shortcuts.trigger('escape');
      this.hideSidebar();
    };

    Mobile.prototype.onClickMenu = function() {
      if (this.isSidebarShown()) {
        this.hideSidebar();
      } else {
        this.showSidebar();
      }
    };

    Mobile.prototype.onTapSearch = function() {
      return this.body.scrollTop = 0;
    };

    Mobile.prototype.afterRoute = function() {
      this.hideSidebar();
    };

    return Mobile;

  })(app.View);

}).call(this);
