// Generated by CoffeeScript 1.8.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  app.views.ListSelect = (function(_super) {
    __extends(ListSelect, _super);

    ListSelect.activeClass = 'active';

    ListSelect.events = {
      click: 'onClick'
    };

    function ListSelect(el) {
      this.el = el;
      this.onClick = __bind(this.onClick, this);
      ListSelect.__super__.constructor.apply(this, arguments);
    }

    ListSelect.prototype.deactivate = function() {
      if (ListSelect.__super__.deactivate.apply(this, arguments)) {
        this.deselect();
      }
    };

    ListSelect.prototype.select = function(el) {
      this.deselect();
      if (el) {
        el.classList.add(this.constructor.activeClass);
        $.trigger(el, 'select');
      }
    };

    ListSelect.prototype.deselect = function() {
      var selection;
      if (selection = this.getSelection()) {
        selection.classList.remove(this.constructor.activeClass);
        $.trigger(selection, 'deselect');
      }
    };

    ListSelect.prototype.selectByHref = function(href) {
      var _ref;
      if (((_ref = this.getSelection()) != null ? _ref.getAttribute('href') : void 0) !== href) {
        this.select(this.find("a[href='" + href + "']"));
      }
    };

    ListSelect.prototype.selectCurrent = function() {
      this.selectByHref(location.pathname + location.hash);
    };

    ListSelect.prototype.getSelection = function() {
      return this.findByClass(this.constructor.activeClass);
    };

    ListSelect.prototype.onClick = function(event) {
      if (event.target.tagName === 'A') {
        this.select(event.target);
      }
    };

    return ListSelect;

  })(app.View);

}).call(this);
