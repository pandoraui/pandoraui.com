// Generated by CoffeeScript 1.8.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  app.AppCache = (function() {
    $.extend(AppCache.prototype, Events);

    AppCache.isEnabled = function() {
      try {
        return applicationCache && applicationCache.status !== applicationCache.UNCACHED;
      } catch (_error) {

      }
    };

    function AppCache() {
      this.onUpdateReady = __bind(this.onUpdateReady, this);
      this.onProgress = __bind(this.onProgress, this);
      this.cache = applicationCache;
      this.notifyUpdate = true;
      if (this.cache.status === this.cache.UPDATEREADY) {
        this.onUpdateReady();
      }
      $.on(this.cache, 'progress', this.onProgress);
      $.on(this.cache, 'updateready', this.onUpdateReady);
    }

    AppCache.prototype.update = function() {
      this.notifyUpdate = true;
      try {
        this.cache.update();
      } catch (_error) {

      }
    };

    AppCache.prototype.updateInBackground = function() {
      this.notifyUpdate = false;
      try {
        this.cache.update();
      } catch (_error) {

      }
    };

    AppCache.prototype.reload = function() {
      $.on(this.cache, 'updateready noupdate error', function() {
        return window.location = '/';
      });
      this.updateInBackground();
    };

    AppCache.prototype.onProgress = function(event) {
      this.trigger('progress', event);
    };

    AppCache.prototype.onUpdateReady = function() {
      if (this.notifyUpdate) {
        this.trigger('updateready');
      }
    };

    return AppCache;

  })();

}).call(this);
