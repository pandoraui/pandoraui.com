// Generated by CoffeeScript 1.8.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  app.models.Entry = (function(_super) {
    var DOT_REGEXP, EVENT_REGEXP, PARANTHESES_REGEXP, SEPARATORS_REGEXP;

    __extends(Entry, _super);

    SEPARATORS_REGEXP = /\:?\ |#|::|->/g;

    PARANTHESES_REGEXP = /\(.*?\)$/;

    EVENT_REGEXP = /\ event$/;

    DOT_REGEXP = /\.+/g;

    function Entry() {
      Entry.__super__.constructor.apply(this, arguments);
      this.text = this.searchValue();
    }

    Entry.prototype.searchValue = function() {
      return this.name.toLowerCase().replace('...', ' ').replace(EVENT_REGEXP, '').replace(SEPARATORS_REGEXP, '.').replace(DOT_REGEXP, '.').replace(PARANTHESES_REGEXP, '').trim();
    };

    Entry.prototype.fullPath = function() {
      return this.doc.fullPath(this.isIndex() ? '' : this.path);
    };

    Entry.prototype.dbPath = function() {
      return this.path.replace(/#.*/, '');
    };

    Entry.prototype.filePath = function() {
      return this.doc.fullPath(this._filePath());
    };

    Entry.prototype.fileUrl = function() {
      return this.doc.fileUrl(this._filePath());
    };

    Entry.prototype._filePath = function() {
      var result;
      result = this.path.replace(/#.*/, '');
      if (result.slice(-5) !== '.html') {
        result += '.html';
      }
      return result;
    };

    Entry.prototype.isIndex = function() {
      return this.path === 'index';
    };

    Entry.prototype.getType = function() {
      return this.doc.types.findBy('name', this.type);
    };

    Entry.prototype.loadFile = function(onSuccess, onError) {
      return app.db.load(this, onSuccess, onError);
    };

    return Entry;

  })(app.Model);

}).call(this);
