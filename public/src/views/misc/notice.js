// Generated by CoffeeScript 1.8.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    __slice = [].slice;

  app.views.Notice = (function(_super) {
    __extends(Notice, _super);

    Notice.className = '_notice';

    function Notice() {
      var args, type;
      type = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
      this.type = type;
      this.args = args;
      Notice.__super__.constructor.apply(this, arguments);
    }

    Notice.prototype.init = function() {
      this.activate();
    };

    Notice.prototype.activate = function() {
      if (Notice.__super__.activate.apply(this, arguments)) {
        this.show();
      }
    };

    Notice.prototype.deactivate = function() {
      if (Notice.__super__.deactivate.apply(this, arguments)) {
        this.hide();
      }
    };

    Notice.prototype.show = function() {
      this.html(this.tmpl.apply(this, ["" + this.type + "Notice"].concat(__slice.call(this.args))));
      this.prependTo($('._app'));
    };

    Notice.prototype.hide = function() {
      $.remove(this.el);
    };

    return Notice;

  })(app.View);

}).call(this);
